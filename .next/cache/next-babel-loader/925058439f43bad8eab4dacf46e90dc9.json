{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/douglasham/kartspel/src/components/register/register.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect } from 'react';\nimport TextInputIndex from '../../smallercomponents/textinput';\n\nconst Register = () => {\n  const {\n    0: formData,\n    1: setFormdata\n  } = useState({\n    username: \"\",\n    password: \"\",\n    passwordCopy: \"\"\n  });\n  const {\n    0: submitting,\n    1: setSubmitting\n  } = useState(false);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    setSubmitting(true);\n    setTimeout(() => {\n      setSubmitting(false);\n    }, 3000);\n  };\n\n  const handleChange = event => {\n    console.log(event.target.value);\n    const value = event.target.name;\n    setFormdata(_objectSpread(_objectSpread({}, formData), {}, {\n      [event.target.name]: value\n    }));\n  };\n\n  useEffect(() => {\n    console.log(formData);\n  }, [formData]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Register Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), submitting && /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Submitting...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: [/*#__PURE__*/_jsxDEV(TextInputIndex, {\n          id: \"username\",\n          label: \"Enter a username\",\n          value: formData.username,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextInputIndex, {\n          id: \"password\",\n          label: \"Enter a password\",\n          value: formData.password,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextInputIndex, {\n          id: \"repassword\",\n          label: \"Re-enter password\",\n          value: formData.passwordCopy,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onSubmit: handleSubmit,\n          children: \"Submit form\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\nexport default Register;","map":{"version":3,"sources":["/home/douglasham/kartspel/src/components/register/register.tsx"],"names":["React","useState","useEffect","TextInputIndex","Register","formData","setFormdata","username","password","passwordCopy","submitting","setSubmitting","handleSubmit","event","preventDefault","setTimeout","handleChange","console","log","target","value","name"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,cAAP,MAA2B,mCAA3B;;AAGA,MAAMC,QAAQ,GAAG,MAAM;AACnB,QAAM;AAAA,OAACC,QAAD;AAAA,OAAWC;AAAX,MAA0BL,QAAQ,CAAC;AACrCM,IAAAA,QAAQ,EAAE,EAD2B;AAErCC,IAAAA,QAAQ,EAAE,EAF2B;AAGrCC,IAAAA,YAAY,EAAE;AAHuB,GAAD,CAAxC;AAKA,QAAM;AAAA,OAACC,UAAD;AAAA,OAAaC;AAAb,MAA8BV,QAAQ,CAAC,KAAD,CAA5C;;AAEA,QAAMW,YAAY,GAAGC,KAAK,IAAI;AAC1BA,IAAAA,KAAK,CAACC,cAAN;AACAH,IAAAA,aAAa,CAAC,IAAD,CAAb;AAEAI,IAAAA,UAAU,CAAC,MAAM;AACbJ,MAAAA,aAAa,CAAC,KAAD,CAAb;AACH,KAFS,EAEP,IAFO,CAAV;AAGH,GAPD;;AASA,QAAMK,YAAY,GAAIH,KAAD,IAAoD;AACrEI,IAAAA,OAAO,CAACC,GAAR,CAAYL,KAAK,CAACM,MAAN,CAAaC,KAAzB;AACA,UAAMA,KAAK,GAAGP,KAAK,CAACM,MAAN,CAAaE,IAA3B;AACAf,IAAAA,WAAW,iCACJD,QADI;AAEP,OAACQ,KAAK,CAACM,MAAN,CAAaE,IAAd,GAAqBD;AAFd,OAAX;AAKH,GARD;;AAUAlB,EAAAA,SAAS,CAAC,MAAM;AACZe,IAAAA,OAAO,CAACC,GAAR,CAAYb,QAAZ;AACH,GAFQ,EAEN,CAACA,QAAD,CAFM,CAAT;AAIA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKK,UAAU,iBACP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHR,eAII;AAAA,6BACI;AAAA,gCACI,QAAC,cAAD;AAAgB,UAAA,EAAE,EAAC,UAAnB;AAA8B,UAAA,KAAK,EAAC,kBAApC;AAAuD,UAAA,KAAK,EAAEL,QAAQ,CAACE,QAAvE;AAAiF,UAAA,QAAQ,EAAES;AAA3F;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,cAAD;AAAgB,UAAA,EAAE,EAAC,UAAnB;AAA8B,UAAA,KAAK,EAAC,kBAApC;AAAuD,UAAA,KAAK,EAAEX,QAAQ,CAACG,QAAvE;AAAiF,UAAA,QAAQ,EAAEQ;AAA3F;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI,QAAC,cAAD;AAAgB,UAAA,EAAE,EAAC,YAAnB;AAAgC,UAAA,KAAK,EAAC,mBAAtC;AAA0D,UAAA,KAAK,EAAEX,QAAQ,CAACI,YAA1E;AAAwF,UAAA,QAAQ,EAAEO;AAAlG;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAQ,UAAA,QAAQ,EAAEJ,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA,kBADJ;AAiBH,CAhDD;;AAkDA,eAAeR,QAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport TextInputIndex from '../../smallercomponents/textinput'\n\n\nconst Register = () => {\n    const [formData, setFormdata] = useState({\n        username: \"\",\n        password: \"\",\n        passwordCopy: \"\"\n    })\n    const [submitting, setSubmitting] = useState(false);\n\n    const handleSubmit = event => {\n        event.preventDefault();\n        setSubmitting(true);\n\n        setTimeout(() => {\n            setSubmitting(false);\n        }, 3000);\n    }\n\n    const handleChange = (event: { target: { name: any; value: any; }; }) => {\n        console.log(event.target.value)\n        const value = event.target.name\n        setFormdata({\n            ...formData,\n            [event.target.name]: value\n        })\n\n    }\n\n    useEffect(() => {\n        console.log(formData)\n    }, [formData])\n\n    return (\n        <>\n            <h1>Register Page</h1>\n            {submitting &&\n                <h1>Submitting...</h1>}\n            <form >\n                <fieldset>\n                    <TextInputIndex id=\"username\" label=\"Enter a username\" value={formData.username} onChange={handleChange} ></TextInputIndex>\n                    <TextInputIndex id=\"password\" label=\"Enter a password\" value={formData.password} onChange={handleChange} ></TextInputIndex>\n                    <TextInputIndex id=\"repassword\" label=\"Re-enter password\" value={formData.passwordCopy} onChange={handleChange} ></TextInputIndex>\n                    <button onSubmit={handleSubmit}>Submit form</button>\n                </fieldset>\n            </form>\n\n\n        </>\n    )\n}\n\nexport default Register"]},"metadata":{},"sourceType":"module"}